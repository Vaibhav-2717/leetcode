class Solution {
    public boolean exist(char[][] board, String word) {
        char[]cha= word.toCharArray();
        
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                if(cha[0]==board[i][j]){
                    boolean[][]visited= new boolean[board.length][board[0].length];
                    if(dfs(board,cha,i,j,visited,0)){
                        return true;
                    }
                }
            }
        }
        return false;
    }
    public boolean dfs(char[][]board,char[]cha,int i,int j,boolean[][]visited,int index){
        if(index==cha.length)
            return true;
        
        if(i<0 || j<0 || i>=board.length || j>=board[0].length||visited[i][j]==true){
            return false;
        }
        if(board[i][j] != cha[index]){
            return false;
        }
        
        visited[i][j]=true;
        if(dfs(board,cha,i-1,j,visited,index+1)||dfs(board,cha,i+1,j,visited,index+1)||dfs(board,cha,i,j-1,visited,index+1)||dfs(board,cha,i,j+1,visited,index+1)){
            return true;
        }
        visited[i][j]=false;
        return false;
    }
}
